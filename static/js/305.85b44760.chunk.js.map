{"version":3,"file":"static/js/305.85b44760.chunk.js","mappings":"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","sources":["API/API.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass API {\n  constructor() {\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = 'api_key=9cca312caffd11f4ae9f11244d585025';\n  }\n\n  getTrendingMovies = async period => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/trending/movie/${period}?${this.apiKey}`\n      );\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMoviesByQuery = async query => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/search/movie?${this.apiKey}&query=${query}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieById = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieCredits = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/credits?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieReviews = async movieId => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/reviews?${this.apiKey}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}\n\nconst MovieAPI = new API();\n\nexport default MovieAPI;\n","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 10px;\n`;\n\nexport const Item = styled.li`\n    border: 1px solid grey;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nexport const CardLink = styled(NavLink)`\n    max-width: 100%;\n`;\n\nexport const MoviePoster = styled.img`\n    max-width: 100%;\n    min-height: 351px;\n\n    object-fit: contain;\n`;\n\nexport const Wrapper = styled.div`\n    padding: 4px 8px;\n    padding-bottom: 6px;\n`;\n\nexport const Title = styled.p`\n    font-size: 14px;\n    font-weight: 700;\n`;\n\nexport const InfoWrapper = styled.div`\n    display: flex;\n\n    margin-top: 4px;\n`;\n\nexport const Info = styled(Title)`\n    font-weight: 600;\n    font-size: 10px;\n    color: #9e9e9e;\n`;\n\nexport const Divider = styled.span`\n    margin-left: 4px;\n\n    font-size: 10px;\n    font-weight: 600;\n\n    color: #ff9d7a;\n`;\n\nexport const DateInfo = styled(Info)`\n    margin-left: 4px;\n`;","import PropTypes from 'prop-types';\n\n//========== hooks ==========\nimport { useLocation } from 'react-router-dom';\n\n//========== components ==========\nimport { NavLink } from 'react-router-dom';\n\n//========== styles ==========\nimport {\n\tList,\n\tItem,\n\tMoviePoster,\n\tWrapper,\n\tTitle,\n\tInfoWrapper,\n\tInfo,\n\tDateInfo,\n\tDivider,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ moviesInfo }) => {\n\tconst location = useLocation();\n\n\treturn (\n\t\t<List>\n\t\t\t{moviesInfo.map(({ id, title, release_date, vote_average, poster_path }) => {\n\t\t\t\tconst fixedVotes = vote_average.toFixed(1);\n\t\t\t\tconst fixedDate = release_date\n\t\t\t\t\t? release_date.split('-').reverse().join('.')\n\t\t\t\t\t: '';\n\t\t\t\tconst isReleaseDate = Boolean(fixedDate);\n\n\t\t\t\treturn (\n\t\t\t\t\t<Item key={id}>\n\t\t\t\t\t\t<NavLink to={`/movies/${id}`} state={{ from: location }}>\n\t\t\t\t\t\t\t<MoviePoster src={poster_path} alt={title} />\n\t\t\t\t\t\t\t<Wrapper>\n\t\t\t\t\t\t\t\t<Title>{title}</Title>\n\t\t\t\t\t\t\t\t<InfoWrapper>\n\t\t\t\t\t\t\t\t\t<Info>{fixedVotes}</Info>\n\t\t\t\t\t\t\t\t\t{isReleaseDate && (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<Divider>I</Divider>\n\t\t\t\t\t\t\t\t\t\t\t<DateInfo>{fixedDate}</DateInfo>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</InfoWrapper>\n\t\t\t\t\t\t\t</Wrapper>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</Item>\n\t\t\t\t);\n\t\t\t})}\n\t\t</List>\n\t);\n};\n\nMoviesList.propTypes = {\n\tmoviesInfo: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.number.isRequired,\n\t\t\ttitle: PropTypes.string.isRequired,\n\t\t\trelease_date: PropTypes.string,\n\t\t\tvote_average: PropTypes.number.isRequired,\n\t\t\tposter_path: PropTypes.any.isRequired,\n\t\t})\n\t),\n};\n\nexport { MoviesList };\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n\tpadding-bottom: 20px;\n`;\n\nexport const FlexContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\n\twidth: 768px;\n\tpadding: 0 20px;\n\tpadding-top: 10px;\n\tpadding-bottom: 20px;\n\n\tmargin: 0 auto;\n`;\n\nexport const Form = styled.form`\n\tposition: relative;\n\n\tmargin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n\tmin-width: 300px;\n\tpadding: 3px 8px;\n\n\tfont-size: 12px;\n\n\tborder: none;\n\toutline: none;\n\tborder-bottom: 1px solid;\n\tborder-color: #b5b5b5;\n\tbackground-color: transparent;\n\n\ttransition: border-color 250ms ease-in-out;\n\n\t:hover,\n\t:focus {\n\t\tborder-color: black;\n\t}\n\n\t::placeholder {\n\t\tfont-style: italic;\n\t\tcolor: grey;\n\t}\n`;\n\nexport const Btn = styled.button`\n\tposition: absolute;\n\tbottom: 4;\n\tright: 0;\n\tpadding: 0;\n\tpadding-right: 4px;\n\n\tfont-size: 12px;\n\n\tborder: none;\n\tbackground-color: transparent;\n\n\ttransition: color 300ms ease-in-out;\n\n\t:hover,\n\t:focus {\n\t\tcolor: orangered;\n\t}\n`;\n\nexport const Message = styled.p`\n\tmargin-top: 10px;\n\n\tfont-size: 14px;\n\ttext-align: center;\n`;\n","import MovieAPI from 'API/API';\n\n//========== hooks ==========\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\n//========== components ==========\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { FiSearch } from 'react-icons/fi';\nimport posterPlaceholder from 'images/posterPlaceholder.png';\n\n//========== styles ==========\nimport {\n\tMain,\n\tFlexContainer,\n\tForm,\n\tInput,\n\tBtn,\n\tMessage,\n} from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n\tconst [movies, setMovies] = useState(null);\n\tconst [searchParams, setSearchParams] = useSearchParams('');\n\tconst query = searchParams.get('query') ?? ``;\n\n\tuseEffect(() => {\n\t\tif (!query) return;\n\n\t\tMovieAPI.getMoviesByQuery(query).then(movies => {\n\t\t\tconst info = movies.reduce((acc, movie) => {\n\t\t\t\tconst poster = movie.poster_path\n\t\t\t\t\t? `https://image.tmdb.org/t/p/original/${movie.poster_path}`\n\t\t\t\t\t: posterPlaceholder;\n\t\t\t\tconst film = {\n\t\t\t\t\tid: movie.id,\n\t\t\t\t\ttitle: movie.title,\n\t\t\t\t\trelease_date: movie.release_date,\n\t\t\t\t\tposter_path: poster,\n\t\t\t\t\tvote_average: movie.vote_average,\n\t\t\t\t};\n\t\t\t\treturn [...acc, film];\n\t\t\t}, []);\n\n\t\t\tsetMovies(info);\n\t\t});\n\t}, [query]);\n\n\tconst onFormSubmit = event => {\n\t\tevent.preventDefault();\n\n\t\tconst searchQuery = event.target.elements.query.value;\n\n\t\tsetSearchParams({ query: searchQuery });\n\t};\n\n\treturn (\n\t\t<Main>\n\t\t\t<FlexContainer>\n\t\t\t\t<Form onSubmit={onFormSubmit}>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"query\"\n\t\t\t\t\t\tplaceholder=\"Enter search query\"\n\t\t\t\t\t\tvalue={searchParams.query}\n\t\t\t\t\t/>\n\t\t\t\t\t<Btn type=\"submit\">\n\t\t\t\t\t\t<FiSearch />\n\t\t\t\t\t</Btn>\n\t\t\t\t</Form>\n\t\t\t\t{!movies ? (\n\t\t\t\t\t<Message>Enter a request to get the movies you are interested in.</Message>\n\t\t\t\t) : movies.length === 0 ? (\n\t\t\t\t\t<Message>We did not find any movies for your request.</Message>\n\t\t\t\t) : (\n\t\t\t\t\t<MoviesList moviesInfo={movies} />\n\t\t\t\t)}\n\t\t\t</FlexContainer>\n\t\t</Main>\n\t);\n};\n\nexport default MoviesPage;\n"],"names":["API","getTrendingMovies","period","axios","baseUrl","apiKey","results","data","console","log","message","getMoviesByQuery","query","getMovieById","movieId","getMovieCredits","getMovieReviews","this","MovieAPI","List","styled","Item","MoviePoster","NavLink","Wrapper","Title","InfoWrapper","Info","Divider","DateInfo","MoviesList","moviesInfo","location","useLocation","map","id","title","release_date","vote_average","poster_path","fixedVotes","toFixed","fixedDate","split","reverse","join","isReleaseDate","Boolean","to","state","from","src","alt","Main","FlexContainer","Form","Input","Btn","Message","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","then","info","reduce","acc","movie","poster","posterPlaceholder","film","onSubmit","event","preventDefault","searchQuery","target","elements","value","type","name","placeholder","length"],"sourceRoot":""}