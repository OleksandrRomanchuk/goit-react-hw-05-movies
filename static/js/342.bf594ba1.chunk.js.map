{"version":3,"file":"static/js/342.bf594ba1.chunk.js","mappings":"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","sources":["API/API.js","components/ReviewsSection/ReviewsSection.styled.jsx","components/ReviewsSection/ReviewsSection.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass API {\n  constructor() {\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = 'api_key=9cca312caffd11f4ae9f11244d585025';\n  }\n\n  getTrendingMovies = async period => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/trending/movie/${period}?${this.apiKey}`\n      );\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMoviesByQuery = async query => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/search/movie?${this.apiKey}&query=${query}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieById = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieCredits = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/credits?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieReviews = async movieId => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/reviews?${this.apiKey}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}\n\nconst MovieAPI = new API();\n\nexport default MovieAPI;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    width: 768px;\n    padding: 0 20px;\n\n    margin: 0 auto;\n`;\n\nexport const Title = styled.h3`\n    font-size: 20px;\n    text-align: center;\n`;\n\nexport const Message = styled.p`\n    margin-top: 10px;\n\n    font-size: 14px;\n    text-align: center;\n`;\n\nexport const List = styled.ul`\n    margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n    padding: 15px;\n\n    border: 1px solid black;\n\n    :not(:first-child) {\n        margin-top: 10px;\n    }\n`;\n\nexport const Author = styled.p`\n    font-weight: 500;\n    color: #9e9e9e;\n`;\n\nexport const Devider = styled.span`\n    margin-left: 4px;\n\n    font-weight: 500;\n    color: orangered;\n`;\n\nexport const AuthorSpan = styled.span`\n    margin-left: 4px;\n\n    font-size: 16px;\n    font-weight: 500;\n    color: rgb(15, 15, 28);\n`;\n\nexport const Content = styled.p`\n    margin-top: 8px;\n`;","import MovieAPI from \"API/API\";\n\n//========== hooks ==========\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n//========== styles ==========\nimport { Wrapper, Title, Message, List, Item, Author, Devider, AuthorSpan, Content } from \"./ReviewsSection.styled\";\n\nconst ReviewsSection = () => {\n    const [reviews, setReviews] = useState(null);\n    const { id } = useParams();\n\n    useEffect(() => {\n        MovieAPI.getMovieReviews(id).then(reviews => {\n            const info = reviews.reduce((acc, review) => {\n                const rev = {\n                    id: review.id,\n                    name: review.author,\n                    content: review.content,\n                };\n                return [...acc, rev]\n            }, [])\n\n            setReviews(info);\n        });\n    }, [id]);\n\n    if (!reviews) return;\n\n    const reviewsCount = Boolean(reviews.length);\n\n    return <Wrapper>\n        <Title>Rewiews</Title>\n        {!reviewsCount && <Message>This movie has no reviews yet.</Message>}\n        {reviewsCount && <>\n            <Message>\n                This movie has {reviews.length} reviews.\n            </Message>\n            <List>\n                {reviews.map(({ id, name, content }) => <Item key={id}>\n                    <Author>Author<Devider>I</Devider><AuthorSpan>{name}</AuthorSpan></Author>\n                    <Content>{content}</Content>\n                </Item>)}\n            </List>\n        </>}\n    </Wrapper>;\n};\n\nexport default ReviewsSection;"],"names":["API","getTrendingMovies","period","axios","baseUrl","apiKey","results","data","console","log","message","getMoviesByQuery","query","getMovieById","movieId","getMovieCredits","getMovieReviews","this","MovieAPI","Wrapper","styled","Title","Message","List","Item","Author","Devider","AuthorSpan","Content","useState","reviews","setReviews","id","useParams","useEffect","then","info","reduce","acc","review","rev","name","author","content","reviewsCount","Boolean","length","map"],"sourceRoot":""}