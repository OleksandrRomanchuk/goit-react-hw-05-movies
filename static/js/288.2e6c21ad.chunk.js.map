{"version":3,"file":"static/js/288.2e6c21ad.chunk.js","mappings":"sMAEMA,GAAAA,EAAAA,EAAAA,IACJ,aAAe,IAAD,4BAKdC,kBALc,mCAKM,WAAMC,GAAN,kGAINC,EAAAA,EAAAA,IAAA,UACL,EAAKC,QADA,2BAC0BF,EAD1B,YACoC,EAAKG,SALnC,uBAGNC,EAHM,EAGdC,KAAQD,QAHM,kBAOTA,GAPS,gCAShBE,QAAQC,IAAI,KAAMC,SATF,yDALN,2DAkBdC,iBAlBc,mCAkBK,WAAMC,GAAN,kGAILT,EAAAA,EAAAA,IAAA,UACL,EAAKC,QADA,yBACwB,EAAKC,OAD7B,kBAC6CO,IALxC,uBAGLN,EAHK,EAGbC,KAAQD,QAHK,kBAQRA,GARQ,gCAUfE,QAAQC,IAAI,KAAMC,SAVH,yDAlBL,2DAgCdG,aAhCc,mCAgCC,WAAMC,GAAN,kGAEYX,EAAAA,EAAAA,IAAA,UAClB,EAAKC,QADa,kBACIU,EADJ,YACe,EAAKT,SAHhC,uBAEHE,EAFG,EAEHA,KAFG,kBAMJA,GANI,gCAQXC,QAAQC,IAAI,KAAMC,SARP,yDAhCD,2DA4CdK,gBA5Cc,mCA4CI,WAAMD,GAAN,kGAESX,EAAAA,EAAAA,IAAA,UAClB,EAAKC,QADa,kBACIU,EADJ,oBACuB,EAAKT,SAHrC,uBAENE,EAFM,EAENA,KAFM,kBAMPA,GANO,gCAQdC,QAAQC,IAAI,KAAMC,SARJ,yDA5CJ,2DAwDdM,gBAxDc,mCAwDI,WAAMF,GAAN,kGAIJX,EAAAA,EAAAA,IAAA,UACL,EAAKC,QADA,kBACiBU,EADjB,oBACoC,EAAKT,SALrC,uBAGJC,EAHI,EAGZC,KAAQD,QAHI,kBAQPA,GARO,gCAUdE,QAAQC,IAAI,KAAMC,SAVJ,yDAxDJ,sDACZO,KAAKb,QAAU,+BACfa,KAAKZ,OAAS,0CACf,IAoEGa,EAAW,IAAIlB,EAErB,K,2MCzEamB,EAAOC,EAAAA,GAAAA,KAAH,mDAIJC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4HAORG,EAAWH,EAAAA,GAAAA,KAAH,8KAYRI,EAAOJ,EAAAA,GAAAA,IAAH,wJASJK,EAAcL,EAAAA,GAAAA,IAAH,sIAQXM,EAAQN,EAAAA,GAAAA,GAAH,8CAILO,EAAUP,EAAAA,GAAAA,KAAH,+FAOPQ,EAAYR,EAAAA,GAAAA,KAAH,4FAOTS,EAAOT,EAAAA,GAAAA,EAAH,mHAQJU,EAAWV,EAAAA,GAAAA,KAAH,2HAQRW,EAASX,EAAAA,GAAAA,IAAH,6DAKNY,EAAaZ,EAAAA,GAAAA,IAAH,mGAMVa,EAAWb,EAAAA,GAAAA,GAAH,gFAMRc,EAAUd,EAAAA,GAAAA,GAAH,qEAMPe,EAAUf,EAAAA,GAAAA,GAAH,qFAMPgB,GAAUhB,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uP,SCoBpB,EA7FsB,WAAO,IAAD,IACnBiB,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAmB7C,IAjBAC,EAAAA,EAAAA,YAAU,WACT5B,EAAAA,EAAAA,aAAsBmB,GAAIU,MAAK,SAAAC,GAC9B,IAAMC,EAASD,EAAME,YAAN,8CAC2BF,EAAME,aAC7CC,EACGC,EAAO,CACZC,MAAOL,EAAMK,MACbH,YAAaD,EACbK,OAAQN,EAAMM,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACnDC,aAAcX,EAAMW,aACpBC,SAAUZ,EAAMY,SAChBC,aAAcb,EAAMa,cAErBpB,EAAaW,EACb,GACD,GAAE,CAACf,IAECG,EAAL,CAEA,IAAQa,EACPb,EADOa,MAAOH,EACdV,EADcU,YAAaI,EAC3Bd,EAD2Bc,OAAQK,EACnCnB,EADmCmB,aAAcC,EACjDpB,EADiDoB,SAAUC,EAC3DrB,EAD2DqB,aAGtDC,EAAYC,QAAQT,EAAOU,QAC3BC,EAAON,EAAeA,EAAaO,MAAM,KAAK,GAAK,GACnDC,EAAgBJ,QAAQJ,GACxBS,EAASP,EAAaQ,QAAQ,GAEpC,OACC,SAAClD,EAAD,WACC,UAACmD,EAAA,EAAD,YACC,UAACjD,EAAD,CAAUkD,GAAI7B,EAAcW,MAAM,UAAlC,WACC,SAAC,MAAD,KACA,SAAC9B,EAAD,0BAED,UAACC,EAAD,YACC,SAACO,EAAD,CAAQyC,IAAKtB,EAAauB,IAAKpB,KAC/B,UAAC5B,EAAD,YACC,4BACC,UAACC,EAAD,WACE2B,EACAc,IACA,iCACC,SAACxC,EAAD,iBACA,SAACC,EAAD,UAAYqC,WAIf,UAACpC,EAAD,2BACa,SAACF,EAAD,iBACZ,SAACG,EAAD,UAAWsC,QAEZ,UAACvC,EAAD,uBACS,SAACF,EAAD,iBACR,SAACG,EAAD,UAAW8B,OAEXE,IACA,UAACjC,EAAD,qBACO,SAACF,EAAD,iBACN,SAACG,EAAD,UAAWwB,WAId,UAACtB,EAAD,YACC,SAACC,EAAD,sCACA,UAACC,EAAD,YACC,SAACC,EAAD,WACC,SAACC,EAAD,CAASmC,GAAG,OAAO3B,MAAO,CAAEC,KAAMH,GAAlC,qBAID,SAACP,EAAD,WACC,SAACC,EAAD,CAASmC,GAAG,UAAU3B,MAAO,CAAEC,KAAMH,GAArC,oCAQL,SAAC,EAAAgC,SAAD,WACC,SAAC,KAAD,UA/DkB,CAoEtB,C","sources":["API/API.js","pages/MovieInfoPage/MovieInfoPage.styled.jsx","pages/MovieInfoPage/MovieInfoPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass API {\n  constructor() {\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = 'api_key=9cca312caffd11f4ae9f11244d585025';\n  }\n\n  getTrendingMovies = async period => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/trending/movie/${period}?${this.apiKey}`\n      );\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMoviesByQuery = async query => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/search/movie?${this.apiKey}&query=${query}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieById = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieCredits = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/credits?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieReviews = async movieId => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/reviews?${this.apiKey}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}\n\nconst MovieAPI = new API();\n\nexport default MovieAPI;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Main = styled.main`\n    padding-bottom: 20px;\n`;\n\nexport const BackLink = styled(NavLink)`\n    display: flex;\n    justify-content: baseline;\n    align-items: center;\n    font-size: 14px;\n`;\n\nexport const LinkSpan = styled.span`\n    margin-left: 4px;\n\n    font-weight: 500;\n\n    transition: color 250ms ease-in-out;\n\n    :hover, :focus {\n        color: orangered;\n    }\n`;\n\nexport const Card = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    justify-content: center;\n    gap: 20px;\n\npadding: 20px;\n`;\n\nexport const InfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    padding: 10px 0;\n`;\n\nexport const Title = styled.h2`\n    font-size: 20px;\n`;\n\nexport const Devider = styled.span`\n    margin-left: 8px;\n\n    font-weight: 500;\n    color: orangered;\n`;\n\nexport const TitleSpan = styled.span`\n    margin-left: 8px;\n\n    font-size: 14px;\n    color: #9e9e9e;\n`;\n\nexport const Info = styled.p`\n    margin-top: 20px;\n\n    font-size: 14px;\n    font-weight: 500;\n    color: #9e9e9e;\n`;\n\nexport const InfoSpan = styled.span`\n    margin-left: 8px;\n\n    font-size: 12px;\n    font-weight: 400;\n    color: rgb(15, 15, 28);\n`;\n\nexport const Poster = styled.img`\n    width: 100%;\n    height: auto;\n`;\n\nexport const AddWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const AddTitle = styled.h3`\n    font-size: 12px;\n\n    text-transform: uppercase;\n`;\n\nexport const AddList = styled.ul`\n    display: flex;\n\n    margin-top: 10px;\n`;\n\nexport const AddItem = styled.li`\n    :not(:first-child) {\n        margin-left: 25px;\n    }\n`;\n\nexport const AddLink = styled(NavLink)`\n    position: relative;\n\n    font-weight: 500;\n    color: #9e9e9e;\n\n    transition: color 300ms ease-in-out;\n\n    &.active {\n        color: orangered\n    }\n\n    :hover, :focus {\n        color: orangered\n    }\n`;\n","import MovieAPI from 'API/API';\n\n//========== component ==========\nimport { Outlet } from 'react-router-dom';\nimport { Container } from 'components/Container/Container';\nimport { FiChevronsLeft } from 'react-icons/fi';\nimport posterPlaceholder from 'images/posterPlaceholder.png';\n\n//========== hooks ==========\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\n//========== styles ==========\nimport {\n\tMain,\n\tBackLink,\n\tLinkSpan,\n\tCard,\n\tTitle,\n\tDevider,\n\tTitleSpan,\n\tPoster,\n\tInfoWrapper,\n\tInfo,\n\tInfoSpan,\n\tAddWrapper,\n\tAddTitle,\n\tAddList,\n\tAddItem,\n\tAddLink,\n} from './MovieInfoPage.styled';\n\nconst MovieInfoPage = () => {\n\tconst { id } = useParams();\n\tconst [movieInfo, setMovieInfo] = useState(null);\n\tconst location = useLocation();\n\tconst backLinkHref = location.state?.from ?? '/';\n\n\tuseEffect(() => {\n\t\tMovieAPI.getMovieById(id).then(movie => {\n\t\t\tconst poster = movie.poster_path\n\t\t\t\t? `https://image.tmdb.org/t/p/original/${movie.poster_path}`\n\t\t\t\t: posterPlaceholder;\n\t\t\tconst info = {\n\t\t\t\ttitle: movie.title,\n\t\t\t\tposter_path: poster,\n\t\t\t\tgenres: movie.genres.map(genre => genre.name).join(', '),\n\t\t\t\trelease_date: movie.release_date,\n\t\t\t\toverview: movie.overview,\n\t\t\t\tvote_average: movie.vote_average,\n\t\t\t};\n\t\t\tsetMovieInfo(info);\n\t\t});\n\t}, [id]);\n\n\tif (!movieInfo) return;\n\n\tconst { title, poster_path, genres, release_date, overview, vote_average } =\n\t\tmovieInfo;\n\n\tconst areGenres = Boolean(genres.length);\n\tconst year = release_date ? release_date.split('-')[0] : '';\n\tconst isReleaseDate = Boolean(release_date);\n\tconst rating = vote_average.toFixed(1);\n\n\treturn (\n\t\t<Main>\n\t\t\t<Container>\n\t\t\t\t<BackLink to={backLinkHref} title=\"Go back\">\n\t\t\t\t\t<FiChevronsLeft />\n\t\t\t\t\t<LinkSpan>Go back</LinkSpan>\n\t\t\t\t</BackLink>\n\t\t\t\t<Card>\n\t\t\t\t\t<Poster src={poster_path} alt={title} />\n\t\t\t\t\t<InfoWrapper>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Title>\n\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t{isReleaseDate && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Devider>I</Devider>\n\t\t\t\t\t\t\t\t\t\t<TitleSpan>{year}</TitleSpan>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t<Info>\n\t\t\t\t\t\t\t\tMovie rating<Devider>I</Devider>\n\t\t\t\t\t\t\t\t<InfoSpan>{rating}</InfoSpan>\n\t\t\t\t\t\t\t</Info>\n\t\t\t\t\t\t\t<Info>\n\t\t\t\t\t\t\t\tOverview<Devider>I</Devider>\n\t\t\t\t\t\t\t\t<InfoSpan>{overview}</InfoSpan>\n\t\t\t\t\t\t\t</Info>\n\t\t\t\t\t\t\t{areGenres && (\n\t\t\t\t\t\t\t\t<Info>\n\t\t\t\t\t\t\t\t\tGenres<Devider>I</Devider>\n\t\t\t\t\t\t\t\t\t<InfoSpan>{genres}</InfoSpan>\n\t\t\t\t\t\t\t\t</Info>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<AddWrapper>\n\t\t\t\t\t\t\t<AddTitle>Additional information</AddTitle>\n\t\t\t\t\t\t\t<AddList>\n\t\t\t\t\t\t\t\t<AddItem>\n\t\t\t\t\t\t\t\t\t<AddLink to=\"cast\" state={{ from: backLinkHref }}>\n\t\t\t\t\t\t\t\t\t\tCast\n\t\t\t\t\t\t\t\t\t</AddLink>\n\t\t\t\t\t\t\t\t</AddItem>\n\t\t\t\t\t\t\t\t<AddItem>\n\t\t\t\t\t\t\t\t\t<AddLink to=\"reviews\" state={{ from: backLinkHref }}>\n\t\t\t\t\t\t\t\t\t\tReviews\n\t\t\t\t\t\t\t\t\t</AddLink>\n\t\t\t\t\t\t\t\t</AddItem>\n\t\t\t\t\t\t\t</AddList>\n\t\t\t\t\t\t</AddWrapper>\n\t\t\t\t\t</InfoWrapper>\n\t\t\t\t</Card>\n\t\t\t\t<Suspense>\n\t\t\t\t\t<Outlet />\n\t\t\t\t</Suspense>\n\t\t\t</Container>\n\t\t</Main>\n\t);\n};\n\nexport default MovieInfoPage;\n"],"names":["API","getTrendingMovies","period","axios","baseUrl","apiKey","results","data","console","log","message","getMoviesByQuery","query","getMovieById","movieId","getMovieCredits","getMovieReviews","this","MovieAPI","Main","styled","BackLink","NavLink","LinkSpan","Card","InfoWrapper","Title","Devider","TitleSpan","Info","InfoSpan","Poster","AddWrapper","AddTitle","AddList","AddItem","AddLink","id","useParams","useState","movieInfo","setMovieInfo","backLinkHref","useLocation","state","from","useEffect","then","movie","poster","poster_path","posterPlaceholder","info","title","genres","map","genre","name","join","release_date","overview","vote_average","areGenres","Boolean","length","year","split","isReleaseDate","rating","toFixed","Container","to","src","alt","Suspense"],"sourceRoot":""}