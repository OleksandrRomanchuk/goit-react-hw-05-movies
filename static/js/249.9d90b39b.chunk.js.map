{"version":3,"file":"static/js/249.9d90b39b.chunk.js","mappings":"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","sources":["API/API.js","components/CastSection/CastSection.styled.jsx","components/CastSection/CastSection.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass API {\n  constructor() {\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = 'api_key=9cca312caffd11f4ae9f11244d585025';\n  }\n\n  getTrendingMovies = async period => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/trending/movie/${period}?${this.apiKey}`\n      );\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMoviesByQuery = async query => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/search/movie?${this.apiKey}&query=${query}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieById = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieCredits = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/credits?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieReviews = async movieId => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/reviews?${this.apiKey}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}\n\nconst MovieAPI = new API();\n\nexport default MovieAPI;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n\tmargin: 0 auto;\n\tmargin-top: 25px;\n`;\n\nexport const Title = styled.h3`\n\tfont-size: 20px;\n\ttext-align: center;\n`;\n\nexport const Message = styled.p`\n\tmargin-top: 10px;\n\n\tfont-size: 14px;\n\ttext-align: center;\n`;\n\nexport const List = styled.ul`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, 1fr);\n\tgap: 15px;\n\n\tmargin-top: 15px;\n\n\t@media screen and (min-width: 768px) {\n\t\tgrid-template-columns: repeat(3, 1fr);\n\t\tgap: 10px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\tgrid-template-columns: repeat(4, 1fr);\n\t}\n`;\n\nexport const Item = styled.li`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tborder: 1px solid black;\n`;\n\nexport const Photo = styled.img`\n\twidth: 100%;\n\tmin-height: 315px;\n\tobject-fit: cover;\n\tobject-position: top;\n\n\t@media screen and (min-width: 768px) {\n\t\tmin-height: 347px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\tmin-height: 437px;\n\t}\n`;\n\nexport const Info = styled.div`\n\tpadding-top: 8px;\n\tpadding-bottom: 8px;\n\tpadding-left: 4px;\n\n\tmin-height: 64px;\n`;\n\nexport const Name = styled.p`\n\tfont-size: 14px;\n\tfont-weight: 500;\n`;\n\nexport const Character = styled.p`\n\tmargin-top: 4px;\n\n\tfont-weight: 500;\n\tcolor: #9e9e9e;\n`;\n\nexport const Devider = styled.span`\n\tmargin-left: 4px;\n\n\tfont-weight: 500;\n\tcolor: orangered;\n`;\n\nexport const CharacterSpan = styled.span`\n\tmargin-left: 4px;\n\n\tfont-weight: 400;\n\tcolor: rgb(15, 15, 28);\n`;\n","//========== helpers ==========\nimport MovieAPI from 'API/API';\n\n//========== hooks ==========\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\n//========== components ==========\nimport womanProfilePlaceholder from 'images/womanProfilePlaceholder.webp';\nimport manProfilePlaceholder from 'images/manProfilePlaceholder.webp';\nimport photoPlaceholder from 'images/photoPlaceholder.webp';\n\n//========== styles ==========\nimport {\n\tWrapper,\n\tTitle,\n\tMessage,\n\tList,\n\tItem,\n\tPhoto,\n\tInfo,\n\tName,\n\tCharacter,\n\tDevider,\n\tCharacterSpan,\n} from './CastSection.styled';\n\nconst CastSection = () => {\n\tconst [castInfo, setCastInfo] = useState(null);\n\tconst { id } = useParams();\n\n\tuseEffect(() => {\n\t\tMovieAPI.getMovieCredits(id).then(({ cast }) => {\n\t\t\tconst info = cast.reduce((acc, man) => {\n\t\t\t\tconst profilePlaceholder = !man.gender\n\t\t\t\t\t? photoPlaceholder\n\t\t\t\t\t: man.gender === 1\n\t\t\t\t\t? womanProfilePlaceholder\n\t\t\t\t\t: manProfilePlaceholder;\n\t\t\t\tconst profilePhoto = man.profile_path\n\t\t\t\t\t? `https://image.tmdb.org/t/p/original/${man.profile_path}`\n\t\t\t\t\t: profilePlaceholder;\n\t\t\t\tconst actor = {\n\t\t\t\t\tid: man.id,\n\t\t\t\t\tname: man.name,\n\t\t\t\t\tcharacter: man.character,\n\t\t\t\t\tphoto: profilePhoto,\n\t\t\t\t};\n\t\t\t\treturn [...acc, actor];\n\t\t\t}, []);\n\n\t\t\tsetCastInfo(info);\n\t\t});\n\t}, [id]);\n\n\tif (!castInfo) return;\n\n\tconst areActors = Boolean(castInfo.length);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Title>Cast</Title>\n\t\t\t{!areActors && <Message>We found no information about the cast.</Message>}\n\t\t\t{areActors && (\n\t\t\t\t<List>\n\t\t\t\t\t{castInfo.map(({ id, photo, name, character }) => (\n\t\t\t\t\t\t<Item key={id}>\n\t\t\t\t\t\t\t<Photo src={photo} alt={name} />\n\t\t\t\t\t\t\t<Info>\n\t\t\t\t\t\t\t\t<Name>{name}</Name>\n\t\t\t\t\t\t\t\t<Character>\n\t\t\t\t\t\t\t\t\tCharacter<Devider>I</Devider>\n\t\t\t\t\t\t\t\t\t<CharacterSpan>{character}</CharacterSpan>\n\t\t\t\t\t\t\t\t</Character>\n\t\t\t\t\t\t\t</Info>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t)}\n\t\t</Wrapper>\n\t);\n};\n\nexport default CastSection;\n"],"names":["API","getTrendingMovies","period","axios","baseUrl","apiKey","results","data","console","log","message","getMoviesByQuery","query","getMovieById","movieId","getMovieCredits","getMovieReviews","this","MovieAPI","Wrapper","styled","Title","Message","List","Item","Photo","Info","Name","Character","Devider","CharacterSpan","useState","castInfo","setCastInfo","id","useParams","useEffect","then","info","cast","reduce","acc","man","profilePlaceholder","gender","womanProfilePlaceholder","manProfilePlaceholder","photoPlaceholder","profilePhoto","profile_path","actor","name","character","photo","areActors","Boolean","length","map","src","alt"],"sourceRoot":""}