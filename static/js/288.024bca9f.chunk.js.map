{"version":3,"file":"static/js/288.024bca9f.chunk.js","mappings":"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","sources":["API/API.js","pages/MovieInfoPage/MovieInfoPage.styled.jsx","pages/MovieInfoPage/MovieInfoPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass API {\n  constructor() {\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = 'api_key=9cca312caffd11f4ae9f11244d585025';\n  }\n\n  getTrendingMovies = async period => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/trending/movie/${period}?${this.apiKey}`\n      );\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMoviesByQuery = async query => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/search/movie?${this.apiKey}&query=${query}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieById = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieCredits = async movieId => {\n    try {\n      const { data } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/credits?${this.apiKey}`\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  getMovieReviews = async movieId => {\n    try {\n      const {\n        data: { results },\n      } = await axios.get(\n        `${this.baseUrl}/movie/${movieId}/reviews?${this.apiKey}`\n      );\n\n      return results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}\n\nconst MovieAPI = new API();\n\nexport default MovieAPI;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Main = styled.main`\n    padding-bottom: 20px;\n`;\n\nexport const BackLink = styled(NavLink)`\n    display: flex;\n    justify-content: baseline;\n    align-items: center;\n    font-size: 14px;\n`;\n\nexport const LinkSpan = styled.span`\n    margin-left: 4px;\n\n    font-weight: 500;\n\n    transition: color 250ms ease-in-out;\n\n    :hover, :focus {\n        color: orangered;\n    }\n`;\n\nexport const Card = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    justify-content: center;\n    gap: 20px;\n\npadding: 20px;\n`;\n\nexport const InfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    padding: 10px 0;\n`;\n\nexport const Title = styled.h2`\n    font-size: 20px;\n`;\n\nexport const Devider = styled.span`\n    margin-left: 8px;\n\n    font-weight: 500;\n    color: orangered;\n`;\n\nexport const TitleSpan = styled.span`\n    margin-left: 8px;\n\n    font-size: 14px;\n    color: #9e9e9e;\n`;\n\nexport const Info = styled.p`\n    margin-top: 20px;\n\n    font-size: 14px;\n    font-weight: 500;\n    color: #9e9e9e;\n`;\n\nexport const InfoSpan = styled.span`\n    margin-left: 8px;\n\n    font-size: 12px;\n    font-weight: 400;\n    color: rgb(15, 15, 28);\n`;\n\nexport const Poster = styled.img`\n    width: 100%;\n    height: auto;\n`;\n\nexport const AddWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const AddTitle = styled.h3`\n    font-size: 12px;\n\n    text-transform: uppercase;\n`;\n\nexport const AddList = styled.ul`\n    display: flex;\n\n    margin-top: 10px;\n`;\n\nexport const AddItem = styled.li`\n    :not(:first-child) {\n        margin-left: 25px;\n    }\n`;\n\nexport const AddLink = styled(NavLink)`\n    position: relative;\n\n    font-weight: 500;\n    color: #9e9e9e;\n\n    transition: color 300ms ease-in-out;\n\n    &.active {\n        color: orangered\n    }\n\n    :hover, :focus {\n        color: orangered\n    }\n`;\n","import MovieAPI from \"API/API\";\n\n//========== component ==========\nimport { Outlet} from \"react-router-dom\";\nimport { Container } from \"components/Container/Container\";\nimport { FiChevronsLeft } from 'react-icons/fi';\nimport placeholder from 'images/placeholder.jpg'\n\n//========== hooks ==========\nimport { useState, useEffect, Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n\n//========== styles ==========\nimport { Main, BackLink, LinkSpan, Card, Title, Devider, TitleSpan, Poster, InfoWrapper, Info, InfoSpan, AddWrapper, AddTitle, AddList, AddItem,AddLink } from \"./MovieInfoPage.styled\";\n\nconst MovieInfoPage = () => {\n    const { id } = useParams();\n    const [movieInfo, setMovieInfo] = useState(null);\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n    \n    useEffect(() => {\n        MovieAPI.getMovieById(id).then((movie) => {\n            const poster = movie.poster_path ? `https://image.tmdb.org/t/p/original/${movie.poster_path}` : placeholder;\n            const info = {\n                title: movie.title,\n                poster_path: poster,\n                genres: movie.genres.map(genre => genre.name).join(', '),\n                release_date: movie.release_date,\n                overview: movie.overview,\n                vote_average: movie.vote_average\n            };\n            setMovieInfo(info)\n        });\n    }, [id]);\n\n    if (!movieInfo) return;\n\n    const { title, poster_path, genres, release_date, overview, vote_average } = movieInfo;\n\n    const year = release_date.split('-')[0];\n    const rating = vote_average.toFixed(1);\n\n    return <Main>\n        <Container>\n            <BackLink to={backLinkHref} title=\"Go back\">\n                <FiChevronsLeft /><LinkSpan>Go back</LinkSpan>\n            </BackLink>\n            <Card>\n                <Poster src={poster_path} alt={title} />\n                <InfoWrapper>\n                    <div>\n                        <Title>{title}<Devider>I</Devider><TitleSpan>{year}</TitleSpan></Title>\n                        <Info>Movie rating<Devider>I</Devider><InfoSpan>{rating}</InfoSpan></Info>\n                        <Info>Overview<Devider>I</Devider><InfoSpan>{overview}</InfoSpan></Info>\n                        <Info>Genres<Devider>I</Devider><InfoSpan>{genres}</InfoSpan></Info>\n                    </div>\n                    <AddWrapper>\n                        <AddTitle>Additional information</AddTitle>\n                        <AddList>\n                            <AddItem>\n                                <AddLink to=\"cast\" state={{ from: backLinkHref }}>Cast</AddLink>\n                            </AddItem>\n                            <AddItem>\n                                <AddLink to=\"reviews\" state={{ from: backLinkHref }}>Reviews</AddLink>\n                            </AddItem>\n                        </AddList>\n                    </AddWrapper>\n                </InfoWrapper>\n            </Card>\n            <Suspense >\n                <Outlet />\n            </Suspense>\n        </Container>\n    </Main>;\n};\n\nexport default MovieInfoPage;"],"names":["API","getTrendingMovies","period","axios","baseUrl","apiKey","results","data","console","log","message","getMoviesByQuery","query","getMovieById","movieId","getMovieCredits","getMovieReviews","this","MovieAPI","Main","styled","BackLink","NavLink","LinkSpan","Card","InfoWrapper","Title","Devider","TitleSpan","Info","InfoSpan","Poster","AddWrapper","AddTitle","AddList","AddItem","AddLink","id","useParams","useState","movieInfo","setMovieInfo","backLinkHref","useLocation","state","from","useEffect","then","movie","poster","poster_path","placeholder","info","title","genres","map","genre","name","join","release_date","overview","vote_average","year","split","rating","toFixed","Container","to","src","alt","Suspense"],"sourceRoot":""}